[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'crusoexia/vim-monokai'
hook_add = '''
  colorscheme monokai
  set t_Co=256
'''

[[plugins]]
repo     = 'miyakogi/seiya.vim'
depends  = ['vim-monokai']
hook_add = '''
  let g:seiya_auto_enable=1
'''

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1
  let g:EasyMotion_space_jump_first = 1
  "let g:EasyMotion_use_migemo = 1
  nmap <Space>f <Plug>(easymotion-overwin-f2)
'''

[[plugins]]
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo     = 'vim-airline/vim-airline'
hook_add = '''
  let g:airline_theme='molokai'
  set laststatus=2
'''

[[plugins]]
repo    = 'vim-airline/vim-airline-themes'
depends = ['vim-airline']

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
  let g:EditorConfig_core_mode = 'external_command'
'''

[[plugins]]
repo     = 'Shougo/neosnippet-snippets'
on_i     = 1
hook_add = '''
  let s:snippets_dir = g:vim_dir . '/snippets'
  let g:neosnippet#snippets_directory = s:snippets_dir
'''

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo     = 'plasticboy/vim-markdown'
depends  = ['tabular']
on_ft    = ['markdown']
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
  let g:vim_markdown_conceal = 0
'''

[[plugins]]
repo  = 'kchmck/vim-coffee-script'
on_ft = ['coffee']

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let g:NERDTreeDirArrows = 1
let NERDTreeWinSize=22

let s:rspec_red = 'FE405F'
let s:git_orange = 'F54D27'
let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange " sets the color for .gitignore files
let g:NERDTreePatternMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreePatternMatchHighlightColor['.*_spec\.rb$'] = s:rspec_red " sets the color for files ending with _spec.rb
'''

#[[plugins]]
#repo = 'rhysd/migemo-search.vim'
#hook_add = '''
#  if executable('cmigemo')
#    cnoremap <expr><CR> migemosearch#replace_search_word()."\<CR>"
#  endif
#'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let s:ale_repo_dir = g:dein_dir . '/repos/github.com/w0rp/ale'
  let &runtimepath .= ',' . s:ale_repo_dir

  let g:ale_linters = { 'python': ['pylint'] }
  let g:ale_fixers  = { 'python': ['yapf', 'isort'] }
  let g:ale_fix_on_save = 1

  nmap <silent> <Space>k <Plug>(ale_previous_wrap)
  nmap <silent> <Space>j <Plug>(ale_next_wrap)
'''

[[plugins]]
repo = 'keith/tmux.vim'
on_ft = ['tmux']

[[plugins]]
repo = 'vim-scripts/nginx.vim'
on_ft = ['nginx']

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown']
hook_add = '''
  let g:table_mode_corner = '|'
  let g:table_mode_always_active = 1
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
  let g:go_fmt_command = "goimports"
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
'''
